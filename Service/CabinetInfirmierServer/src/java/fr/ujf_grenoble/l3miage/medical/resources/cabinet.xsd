<?xml version="1.0"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->

<xs:schema version="1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:vds="http://www.ujf-grenoble.fr/l3miage/medical"
           targetNamespace="http://www.ujf-grenoble.fr/l3miage/medical"
           elementFormDefault="qualified">
           
    
    <xs:element name="cabinet" type="vds:Cabinet"/>
    <!-- le cabinet  avec nom , adresse , infirmiers , patients -->
    <xs:complexType name="Cabinet">
        <xs:sequence>
            <xs:element name="nom" type="xs:string"/>
            <xs:element name="adresse" type="vds:Adresse"/>
            <xs:element name="infirmiers" type="vds:Infirmiers" minOccurs="0" maxOccurs="unbounded"/> 
            <xs:element name="patients" type="vds:Patients"/>
        </xs:sequence>
    </xs:complexType>
    
    <!--l'adresse avecétage, numéro, rue, ville , codePostal   -->
    <xs:complexType name="Adresse">
        <xs:sequence>
            <xs:element name="étage" type="xs:string" minOccurs="0"/>
            <xs:element name="numéro" type="xs:int" minOccurs="0"/>
            <xs:element name="rue" type="xs:string"/>
            <xs:element name="ville" type="xs:string"/>             
            <xs:element name="codePostal" type="vds:CodePostal"/>
        </xs:sequence>
    </xs:complexType>
    
    <!--simple type de code postaL sans E ici attention  --> 
    
    <xs:simpleType name="CodePostal">
        <xs:restriction base="xs:integer">
            <xs:pattern value="(\s*)[0-9][0-9][0-9][0-9][0-9](\s*)" />
        </xs:restriction>
    </xs:simpleType>
    
    <!--les infirmiers avec infirmier   -->
        
    <xs:complexType name="Infirmiers">
        <xs:sequence>
            <xs:element name="infirmier" type="vds:Infirmier" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence> 
    </xs:complexType>
    
    <!--infirmier nom, prénom, photo   -->
        
    <xs:complexType name="Infirmier">
        <xs:sequence>
            <xs:element name="nom" type="xs:string"/>
            <xs:element name="prénom" type="xs:string"/>
            <xs:element name="photo" type="vds:Photo"/>
        </xs:sequence>
        <xs:attribute name="id" type="vds:Id"/>
    </xs:complexType>
    
    <xs:simpleType name="Id">
        <xs:restriction base="xs:integer">
            <xs:pattern value="\s*([0-9][0-9][0-9])\s*" />
        </xs:restriction>
    </xs:simpleType>
    
    
    <!-- \D*[.](png|jpg) -->
    
    <xs:simpleType name="Photo">
        <xs:restriction base="xs:string">
            <xs:pattern value="(\s*).*(png|jpg|jpeg|gif)(\s*)" />
        </xs:restriction>
    </xs:simpleType>
     
     
     
     
    <xs:complexType name="Patients">
        <xs:sequence>
            <xs:element name="patient" type="vds:Patient" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    
    <!-- patient avec nom prénom sexe naissance numéro (de type numéro en dessous !!) adresse visite -->
    <xs:complexType name="Patient">
        <xs:sequence>
            <xs:element name="nom" type="xs:string"/>
            <xs:element name="prénom" type="xs:string"/>
            <xs:element name="sexe" type="vds:Sexe"/> 
            <xs:element name="naissance" type="vds:Date"/>
            <xs:element name="numéro" type="vds:Numéro" />
            <xs:element name="adresse" type="vds:Adresse"/>
            <xs:element name="visite" type="vds:Visite" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:simpleType name="Date">
        <xs:restriction base="xs:date">
            <xs:pattern value="[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]" />
        </xs:restriction>
    </xs:simpleType> 
    
    
    
    <!-- sexe M ou F -->
    <xs:simpleType name="Sexe">
        <xs:restriction base="xs:string">
            <xs:pattern value="\s*(F|M)\s*" />
        </xs:restriction>
    </xs:simpleType> 
    
    <xs:simpleType name="Numéro">
        <xs:restriction base="xs:string">
            <xs:pattern value="([1-4]|[7-8])([0-9]{2})(0[1-9]|1[1-2]|62|63)(((([0-1][1-9]|10)|2A|2B|2[1-9]|[3-9][0-9])([0-9][0-8][1-9]|[0-9][1-8][0-9]|[1-9][0-9]0{2}))|((9[7-8][0-9])([0-8][1-9]|[1-9]0))|(9{2}([0-9][0-8][1-9]|[0-9][1-8][0-9]|[1-9][0-9]0{2})))([0-9][0-8][1-9]|[0-9][1-9][0-9]|[1-9]0{2})(0[1-9]|[1-8][0-9]|9[0-7])" />
        </xs:restriction>
    </xs:simpleType> 
  
 

    
    <xs:complexType name="Visite">
        <xs:sequence>
            <xs:element name="acte" type="vds:Acte" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="date" type="vds:Date"/>
        <xs:attribute name="intervenant" type="vds:Id"/>
    </xs:complexType>
   
    <!-- Ici faire qu'on peut avoir un intervenant vide      ((\s*)[0-9]{3}*(\s*))* -->
 
    
    <xs:complexType name="Acte">
        <xs:sequence>
            <xs:element name="interieurActe" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name ="id" type ="xs:int"/>        
    </xs:complexType>
   
</xs:schema>

